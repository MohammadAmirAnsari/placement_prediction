# -*- coding: utf-8 -*-
"""100-Days-of-ML-placement-project-logistic-regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1goeiL_12e5Lq5EYpQ_MdDJl7II5m9NZa
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sklearn.model_selection as model_selection
import sklearn.linear_model as linear_model
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import pickle

df = pd.read_csv('/content/drive/MyDrive/Files/placement.csv')

df.head()
# df.shape

df = df.iloc[:,1:]
df.head()

plt.scatter(df['cgpa'],df['iq'],c=df['placement'])
plt.xlabel('CGPA')
plt.ylabel('IQ')
plt.title('Placement Status by CGPA & IQ')
plt.colorbar(label='Placement (1=Yes, 0=No)')

X = df.iloc[:,:2]
y = df.iloc[:,-1]

X_train, X_test, y_train,y_test = train_test_split(X,y,test_size=0.1)

# X_test

scaler  = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_train

X_test = scaler.transform(X_test)
X_test

clf = LogisticRegression()

# model training
clf.fit(X_train,y_train)

y_pred = clf.predict(X_test)
y_pred

y_test

accuracy_score(y_test,y_pred)

from mlxtend.plotting import plot_decision_regions

plot_decision_regions(X_train, y_train.values, clf=clf, legend=2)


pickle.dump(clf,open('model.pkl','wb'))

pickle.dump(scaler, open('scaler.pkl','wb'))

X_test

# Load model & scaler
model = pickle.load(open('model.pkl', 'rb'))
scaler = pickle.load(open('scaler.pkl', 'rb'))

# Original inputs
# 0 - 9, 0 - 250
real_input = np.array([[8,140]])

# first scale it
scaled_input = scaler.transform(real_input)

# Predict
predictions = model.predict(scaled_input)

if predictions == 1:
  print('Placed')
else:
  print('Not Placed')
